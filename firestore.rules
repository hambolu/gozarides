rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Authentication functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);

      // User's wallet subcollection
      match /wallet/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }

    // Rides collection
    match /rides/{rideId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.driverId == request.auth.uid || 
        resource.data.userId == request.auth.uid
      );
      allow delete: if false; // Rides should never be deleted
    }

    // Chats collection
    match /chats/{chatId} {
      allow read: if isAuthenticated() && (
        resource.data.participants[request.auth.uid] == true
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.participants[request.auth.uid] == true
      );
      allow delete: if false;

      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated() && get(/databases/$(database)/documents/chats/$(chatId)).data.participants[request.auth.uid] == true;
        allow create: if isAuthenticated() && get(/databases/$(database)/documents/chats/$(chatId)).data.participants[request.auth.uid] == true;
        allow update, delete: if false;
      }
    }

    // Transactions collection
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.driverId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update, delete: if false;
    }
  }
}
